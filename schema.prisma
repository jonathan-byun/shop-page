datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified Boolean?
  image         String?
  role          String?
  accounts      Account[]
  sessions      Session[]
  cart          Cart?
  Review        Review[]
  purchaseVerified Boolean?
  stripeCustomerId  String? @unique
  isActive  Boolean  @default(false)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id            String          @id @unique @default(cuid())
  quantity      Int
  price         Decimal
  name          String          @unique
  description   String
  category      String[]
  url           String
  images        String[]
  currentlyHeld ProductInCart[]
  Review        Review[]
  ListSection   ListSection[]
  DropdownSection DropdownSection[]
  TextAndImagePanel TextAndImagePanel[]
  FadingImageCard FadingImageCard[]
  FullWidthPanel  FullWidthPanel[]
}

model ProductInCart {
  product   Product @relation(fields: [productId], references: [id])
  productId String
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    String
  quantity  Int
  createdAt DateTime @default(now())

  @@id(name:"cartProduct",[productId, cartId])
}

model Cart {
  id       String          @id @unique @default(cuid())
  user     User            @relation(fields: [userId], references: [id])
  userId   String          @unique
  total    Decimal?
  products ProductInCart[]
}

model Review {
  product   Product @relation(fields: [productId], references: [id])
  productId String
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  id        String  @id @unique @default(cuid())
  title     String
  body      String
  rating    Decimal
  date      DateTime
}

model ListSection {
  product   Product @relation(fields: [productId], references: [id])
  productId String
  id        String  @id @unique @default(cuid())
  title     String
  ordered   Boolean
  listItems String[]
}

model DropdownSection {
  product   Product @relation(fields: [productId], references: [id])
  productId String
  id        String  @id @unique @default(cuid())
  title     String
  ordered   Boolean
  title2    String?
  description String?
  listItems String[]
}

model TextAndImagePanel {
  product   Product @relation(fields: [productId], references: [id])
  productId String
  id        String  @id @unique @default(cuid())
  title     String
  ordered   Boolean
  listItems String[]
  imageUrl  String
}

model FadingImageCard {
  product   Product @relation(fields: [productId], references: [id])
  productId String
  id        String  @id @unique @default(cuid())
  imageUrl  String
  caption   String
  description String
}

model FullWidthPanel {
  product   Product @relation(fields: [productId], references: [id])
  productId String
  id        String  @id @unique @default(cuid())
  imageUrl  String
  title     String
  PanelOptions PanelOptions[]
}

model PanelOptions {
  panel   FullWidthPanel @relation(fields:[panelId], references:[id])
  panelId String
  id        String  @id @unique @default(cuid())
  name    String
  description String
}
